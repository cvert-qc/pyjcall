from typing import Optional, Dict, Any, List, Literal
from pydantic import BaseModel, Field

class GetCustomFieldsParams(BaseModel):
    """Parameters for getting custom fields for campaign contacts"""
    pass  # No parameters needed for this endpoint

class ListCampaignContactsParams(BaseModel):
    """Parameters for listing contacts in a campaign using v2 API"""
    campaign_id: str = Field(
        ...,
        description="Unique id of the campaign generated by Sales Dialer"
    )
    contact_status: Optional[Literal['Active', 'DNCA', 'Invalid']] = Field(
        None,
        description="Filter based on the status of a contact's number in a specific campaign"
    )
    progress_status: Optional[Literal['Dialed', 'Undialed', 'Skipped']] = Field(
        None,
        description="Filter contacts based on whether they have been contacted successfully or not"
    )
    per_page: Optional[int] = Field(
        None,
        description="Number of contacts to be fetched per page. Default value is 10."
    )
    page: Optional[int] = Field(
        None,
        description="Page number for which contacts are to be fetched. Default value is 0."
    )
    order: Optional[Literal['asc', 'desc']] = Field(
        None,
        description="Order in which the contacts list should appear. Default value is desc."
    )

class AddCampaignContactParams(BaseModel):
    """Parameters for adding a contact to a campaign"""
    campaign_id: str = Field(
        ...,
        description="Campaign ID to which the contact will be added"
    )
    first_name: Optional[str] = Field(
        None,
        description="Contact's first name"
    )
    last_name: Optional[str] = Field(
        None,
        description="Contact's last name"
    )
    phone: str = Field(
        ...,
        description="Formatted phone number of the contact with country code"
    )
    custom_props: Optional[Dict[str, Any]] = Field(
        None,
        description="Custom properties for the contact (key is the ID of the custom field)"
    )

class RemoveCampaignContactParams(BaseModel):
    """Parameters for removing a contact from a campaign"""
    campaign_id: Optional[str] = Field(
        None,
        description="Campaign ID from which to remove the contact"
    )
    phone: Optional[str] = Field(
        None,
        description="Phone number of the contact to remove"
    )
    all: Optional[bool] = Field(
        None,
        description="If true, removes all contacts from the campaign"
    )
